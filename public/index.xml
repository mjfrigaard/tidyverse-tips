<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidyverse tips</title>
    <link>/</link>
    <description>Recent content on tidyverse tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright Year 2020, Martin Frigaard</copyright>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to create crosstabulations</title>
      <link>/post/how-to-create-crosstabulations/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-create-crosstabulations/</guid>
      <description>General cross-tabulations? This post was inspired by two 2015 tweets from Jenny Bryan.
Here is the first tweet,
The original question had some follow-up clarification from Jenny Bryan, which is presented below:
Cross-tabulations (or contingency tables) are very helpful for counting things, especially if you’re dealing with categorical variables that have multiple responses.
The original tweets resulted in quite a few responses from the #rstats community for creating “general cross-tabulation[s],” all of which are summarized in this gist.</description>
    </item>
    
    <item>
      <title>How to split a single string column into multiple columns</title>
      <link>/post/how-to-split-a-single-string-column-into-multiple-columns/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-split-a-single-string-column-into-multiple-columns/</guid>
      <description>This post comes from a Stackoverflow question that I’ve revisited numerous times over the years.
The original question:
 Stackoverflow: Split data frame string column into multiple columns
  I’d like to take data of the form
 before = data.frame(attr = c(1, 30, 4, 6), type = c(&amp;#39;foo_and_bar&amp;#39;, &amp;#39;foo_and_bar_2&amp;#39;)) attr type 1 1 foo_and_bar 2 30 foo_and_bar_2 3 4 foo_and_bar 4 6 foo_and_bar_2  and use split() on the column “type” from above to get something like this:</description>
    </item>
    
    <item>
      <title>How to download html tables with rvest and xml2</title>
      <link>/post/2020-06-13-how-to-download-html-tables-with-rvest-and-xml2/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020-06-13-how-to-download-html-tables-with-rvest-and-xml2/</guid>
      <description>Mark Berman recently tweeted his interview with Ginny Finch, 2016 USA Olympic Boxing team member:
USADA told Houston Olympic boxer @GinnyFuchsUSA,who tested positive for prohibited substance,was determined to have been ingested by her(unprotected sex)without fault or negligence&amp;amp;won’t face ineligibility.USA Boxing told Fuchs the USADA sanction of”No Fault”is the proper outcome pic.twitter.com/ez0gkS7fah — Mark Berman (@MarkBermanFox26) June 11, 2020   According to insidehook, Fuch tested positive for Letrozole and GW501516, two drugs listed as “Hormone and Metabolic Modulators” on the World Anti-Doping Agency (WADA) Prohibited List.</description>
    </item>
    
    <item>
      <title>How to manage your files with fs</title>
      <link>/post/file-management-with-fs/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/file-management-with-fs/</guid>
      <description>Organizing your data, code, documents, and figures in a consistent way that’s easy to navigate is one of the most thoughtful and generous things you’ll ever do. It’s also a basic requirement for a reproducible data science project. In RStudio, this process is made easier with .Rproj files (read more) and the here package.
What fs does? The fs package adds another layer of project organization by giving us access to a “uniform interface to file system operations.</description>
    </item>
    
    <item>
      <title>How to use Rmarkdown in RStudio</title>
      <link>/post/2020-05-23-rstudio-rmarkdown/</link>
      <pubDate>Sat, 23 May 2020 21:13:14 -0500</pubDate>
      
      <guid>/post/2020-05-23-rstudio-rmarkdown/</guid>
      <description>Markdown Markdown files (.md) are common type of plain text files. Markdown is a ‘lightweight markup language,’ which means it’s easy for humans to read, and computers can convert it to HyperText Markup Language (HTML). Markdown allows for some formatting options to aid with communication (see below)
&amp;lt;!-- comments --&amp;gt; normal text *italic* **bold** &amp;gt; quote `code` # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 To learn more, see Markdown Syntax Documentation on John Gruber’s site.</description>
    </item>
    
  </channel>
</rss>